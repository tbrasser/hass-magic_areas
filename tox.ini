[tox]
envlist = py3.7, security, linters, test
skipsdist = true

[testenv]
basepython = python3.7
deps =
  -rrequirements.test.txt

[pytest]
python_files = tests/*
norecursedirs = .tox

[black]
basepython = python3.7
#skip_install = true
deps =
  black
commands =
  black custom_components tests

[flake8]
skip_install = true
ignore =
    E501,
    W503,
    E203,
    D202,
    W504,
    F405
max-line-length = 88
max-complexity = 10
inline-quotes = double
commands =
  flake8 custom_components tests
deps = 
  flake8
  flake8-colors
#  flake8-import-order
  flake8-typing-imports
  pep8-naming

[pylint]
basepython = python3.7
skip_install = true
disable = missing-docstring
deps =
  pyflakes
  pylint
  pytest
  -rrequirements.test.txt
commands =
  pylint --rcfile=tox.ini custom_components tests

[bandit]
basepython = python3.7
skip_install = true
deps =
  bandit
commands =
  bandit -ll -r custom_components

[isort]
multi_line_output = 3
include_trailing_comma=True
force_grid_wrap=0
use_parentheses=True
line_length=88
indent = "    "
# will group `import x` and `from x import` of the same module.
force_sort_within_sections = true
sections = FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER
default_section = THIRDPARTY
known_first_party = custom_components,tests
forced_separate = tests
combine_as_imports = true

deps = 
  isort
commands = 
  isort custom_components tests

[safety]
deps =
  safety
commands = 
  safety check -r requirements.test.txt

[autopep8]
deps = autopep8
basepython = python3.7
commands =
    # Try flags --experimental and --aggressive someday
    autopep8 --max-line-length=88 --in-place -r custom_components

[testenv:security]
basepython = python3.7
skip_install = true
deps =
  {[safety]deps}
  {[bandit]deps}
commands =
  {[safety]commands}
  {[bandit]commands}

[testenv:linters]
deps =
  {[autopep8]deps}
  {[isort]deps}
  {[black]deps}
  {[flake8]deps}
  {[pylint]deps}
commands =
  {[autopep8]commands}
  {[isort]commands}
  {[black]commands}
  {[flake8]commands}
  {[pylint]commands}

[testenv:test]
commands = 
  python -m pytest --cov=custom_components
deps = 
  pytest
  coverage
  pytest-cov
  -rrequirements.test.txt